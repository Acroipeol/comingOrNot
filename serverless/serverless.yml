# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: letsmeetup

provider:
  name: aws
  runtime: nodejs4.3
  stage: development
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: Allow
      Resource: "arn:aws:dynamodb:*:*:*"
      Action:
        - "dynamodb:*"

# neeed to work on these plugins to enable faster development
# plugins:
#   - serverless-dynamodb-local
#   - serverless-offline

custom: ${file(./config.yml)}

functions:
  register:
    handler: handler.register
    events:
      - http:
          path: register
          method: post
          integration: lambda
          cors:
            origins:
              - ${self:custom.cors.origin}

  fetch:
    handler: handler.fetch
    events:
      - http:
          path: fetch
          method: get
          integration: lambda
          cors:
            origins:
              - ${self:custom.cors.origin}

  update:
    handler: handler.update
    events:
      - http:
          path: update
          method: put
          integration: lambda
          cors:
            origins:
              - ${self:custom.cors.origin}

  fetchUserEvents:
    handler: handler.fetchUserEvents
    events:
      - http:
          path: fetchUserEvents
          method: get
          integration: lambda
          cors:
            origins:
              - ${self:custom.cors.origin}

  postDcpfId:
    handler: handler.postDcpfId
    events:
      - http:
          path: postDcpfId
          method: post
          integration: lambda
          cors:
            origins:
              - ${self:custom.cors.origin}

resources:
  Resources:
    DynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "eventId"
            AttributeType: "S"
          - AttributeName: "googleUserName"
            AttributeType: "S"
        GlobalSecondaryIndexes:
          - IndexName: "googleUserName-index"
            KeySchema:
              - AttributeName: googleUserName
                KeyType: "HASH"
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 2
        KeySchema:
          - AttributeName: "eventId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: "event"
